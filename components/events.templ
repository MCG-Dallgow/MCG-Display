package components

import "time"
import "slices"
import "strings"

import . "github.com/mcg-dallgow/mcg-display/types"

templ Events(events map[string][]Event) {
	@Layout(eventsMain(events))
}

templ eventsMain(events map[string][]Event) {
	<div class="flex space-x-3 px-3">
		for _, date := range getDates(events) {
			<div class="w-1/5">
				<div class="px-4 py-2 text-center">
					<p class="text-2xl font-bold">
						{ getWeekday(parseDate(date)) }
					</p>
					<p class="text-xl">
						{ parseDate(date).Format("02.01.2006") }
					</p>
				</div>
				<div class="flex-col space-y-3">
					for _, event := range events[date] {
						@eventBox(event)
					}
				</div>
			</div>
		}
	</div>
}

templ eventBox(event Event) {
	<div class="rounded-lg bg-gray-200 px-4 py-3">
		if !event.FullDay {
			<p>{ event.Start.Format("15:04") + " - " + event.End.Format("15:04") }</p>
		}
		<p class="text-lg font-bold">{ event.Title }</p>
		<p>
			for i, line := range strings.Split(event.Description, "\n") {
				if i > 0 {
					<br/>
				}
				{ line }
			}
		</p>
		<p>{ event.Location }</p>
	</div>
}

func getDates(events map[string][]Event) (dates []string) {
	dates = make([]string, 0)
	for date, dayEvents := range events {
		if len(dates) >= 5 {
			break
		}
		weekday := parseDate(date).Weekday()
		if len(dayEvents) > 0 || weekday != 0 && weekday != 6 {
			dates = append(dates, date)
		}
	}
	slices.Sort(dates)
	return dates
}

func parseDate(text string) (date time.Time) {
	date, _ = time.Parse("2006-01-02", text)
	return date
}

func getWeekday(date time.Time) string {
	weekdaysGer := []string{
		"Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag",
	}

	return weekdaysGer[date.Weekday()]
}
